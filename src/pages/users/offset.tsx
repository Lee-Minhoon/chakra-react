import { useGetUsersByOffset } from "@/apis";
import Layout from "@/components/Layout";
import PageOptions from "@/components/PageOptions";
import Pagination from "@/components/Pagination";
import ViewOptions from "@/components/ViewOptions";
import UserCreateModal from "@/containers/users/UserCreateModal";
import UsersTable from "@/containers/users/UsersTable";
import UsersUtils from "@/containers/users/UsersUtils";
import { Flex, useDisclosure } from "@chakra-ui/react";
import Head from "next/head";
import { useRouter } from "next/router";

const UsersOffsetPage = () => {
  const { isOpen, onOpen, onClose } = useDisclosure();

  const router = useRouter();
  const page = router.query?.page ? Number(router.query?.page) : 1;
  const limit = router.query?.limit ? Number(router.query?.limit) : 10;

  const { data } = useGetUsersByOffset({
    offset: (page - 1) * limit,
    limit,
  });

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <UserCreateModal isOpen={isOpen} onClose={onClose} />
        <Flex direction={"column"} gap={4}>
          <UsersUtils onCreateUser={onOpen} />
          <Flex justifyContent={"flex-end"} gap={4}>
            <ViewOptions />
            <PageOptions />
          </Flex>
          <UsersTable users={data?.data ?? []} />
          <Pagination
            currentPage={page}
            limit={limit}
            total={data?.total ?? 0}
            onChange={(page) =>
              router.push({ query: { ...router.query, page } })
            }
          />
        </Flex>
      </Layout>
    </>
  );
};

export default UsersOffsetPage;
